{:rename-macros {}, :renames {}, :externs {setTimeout {}, Object {}}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name timer.component, :imports nil, :requires {r reagent.core, reagent.core reagent.core, http cljs-http.client, cljs-http.client cljs-http.client, cljs.core.async cljs.core.async}, :cljs.spec/speced-vars [], :uses {<! cljs.core.async}, :defs {timer-component {:protocol-inline nil, :meta {:file "/Users/dennismuller/Project-Management-Master/iCare/Frontend/src/myfrontend/timer.cljs", :line 9, :column 7, :end-line 9, :end-column 22, :arglists (quote ([]))}, :name timer.component/timer-component, :variadic false, :file "src/myfrontend/timer.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, foo {:name timer.component/foo, :file "src/myfrontend/timer.cljs", :line 17, :column 13, :end-line 22, :end-column 21, :meta {:file "/Users/dennismuller/Project-Management-Master/iCare/Frontend/src/myfrontend/timer.cljs", :line 22, :column 18, :end-line 22, :end-column 21}, :tag any}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:else :recur :login :div :with-credentials? :query-params :body}, :order [:div :with-credentials? :query-params :body :login :recur :else]}, :doc nil}